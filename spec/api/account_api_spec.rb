=begin
#Swagger API2Cart

#API2Cart

OpenAPI spec version: 1.1
Contact: contact@api2cart.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::AccountApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AccountApi' do
  before do
    # run before each test
    @instance = SwaggerClient::AccountApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AccountApi' do
    it 'should create an instance of AccountApi' do
      expect(@instance).to be_instance_of(SwaggerClient::AccountApi)
    end
  end

  # unit tests for account_cart_add
  # 
  # Add store to the account
  # @param cart_id Store’s identifier which you can get from cart_list method
  # @param store_url A web address of a store that you would like to connect to API2Cart
  # @param [Hash] opts the optional parameters
  # @option opts [String] :bridge_url This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)
  # @option opts [String] :store_root Absolute path to the store root directory (used with \&quot;bridge_url\&quot; parameter)
  # @option opts [String] :store_key Set this parameter if bridge is already uploaded to store
  # @option opts [BOOLEAN] :validate_version Specify if api2cart should validate cart version
  # @option opts [BOOLEAN] :verify Enables or disables cart&#39;s verification
  # @option opts [String] :db_tables_prefix This parameter is deprecated for this method. Please, use this parameter in method account.config.update
  # @option opts [String] :ftp_host FTP connection host
  # @option opts [String] :ftp_user FTP User
  # @option opts [String] :ftp_password FTP Password
  # @option opts [Integer] :ftp_port FTP Port
  # @option opts [String] :ftp_store_dir FTP Store dir
  # @option opts [String] :_3dcartapi_api_key 3DCart API Key
  # @option opts [String] :amazon_access_token Access token authorizing the app to access resources on behalf of a user
  # @option opts [String] :amazon_seller_id Seller Id
  # @option opts [String] :amazon_marketplaces_ids Comma separated marketplaces ids
  # @option opts [String] :amazon_secret_key Amazon Secret Key
  # @option opts [String] :amazon_access_key_id Amazon Secret Key Id
  # @option opts [String] :aspdotnetstorefront_api_user It&#39;s a AspDotNetStorefront account for which API is available
  # @option opts [String] :aspdotnetstorefront_api_pass AspDotNetStorefront API Password
  # @option opts [String] :bigcommerceapi_admin_account It&#39;s a BigCommerce account for which API is enabled
  # @option opts [String] :bigcommerceapi_api_path BigCommerce API URL
  # @option opts [String] :bigcommerceapi_api_key Bigcommerce API Key
  # @option opts [String] :bigcommerceapi_client_id Client ID of the requesting app
  # @option opts [String] :bigcommerceapi_access_token Access token authorizing the app to access resources on behalf of a user
  # @option opts [String] :bigcommerceapi_context API Path section unique to the store
  # @option opts [String] :demandware_client_id Demandware client id
  # @option opts [String] :demandware_api_password Demandware api password
  # @option opts [String] :demandware_user_name Demandware user name
  # @option opts [String] :demandware_user_password Demandware user password
  # @option opts [String] :demandware_env_type Demandware environment
  # @option opts [String] :ebay_client_id Application ID (AppID).
  # @option opts [String] :ebay_client_secret Shared Secret from eBay application
  # @option opts [String] :ebay_runame The RuName value that eBay assigns to your application.
  # @option opts [String] :ebay_access_token Used to authenticate API requests.
  # @option opts [String] :ebay_refresh_token Used to renew the access token.
  # @option opts [String] :ebay_environment eBay environment
  # @option opts [Integer] :ebay_site_id eBay global ID
  # @option opts [String] :walmart_client_id Walmart client ID
  # @option opts [String] :walmart_client_secret Walmart client secret
  # @option opts [String] :ecwid_acess_token Access token authorizing the app to access resources on behalf of a user
  # @option opts [String] :ecwid_store_id Store Id
  # @option opts [String] :etsy_keystring Etsy keystring
  # @option opts [String] :etsy_shared_secret Etsy shared secret
  # @option opts [String] :etsy_access_token Access token authorizing the app to access resources on behalf of a user
  # @option opts [String] :etsy_token_secret Secret token authorizing the app to access resources on behalf of a user
  # @option opts [String] :neto_api_key Neto API Key
  # @option opts [String] :neto_api_username Neto User Name
  # @option opts [String] :shopify_api_key Shopify API Key
  # @option opts [String] :shopify_api_password Shopify API Password
  # @option opts [String] :shopify_shared_secret Shared secret
  # @option opts [String] :shopify_access_token Access token authorizing the app to access resources on behalf of a user
  # @option opts [String] :volusion_login It&#39;s a Volusion account for which API is enabled
  # @option opts [String] :volusion_password Volusion API Password
  # @option opts [String] :hybris_client_id Omni Commerce Connector Client ID
  # @option opts [String] :hybris_client_secret Omni Commerce Connector Client Secret
  # @option opts [String] :squarespace_api_key Squarespace API Key
  # @return [InlineResponse2006]
  describe 'account_cart_add test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_cart_list
  # 
  # Get list of carts.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :params Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :exclude Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter &#x60;params&#x60; equal force_all
  # @option opts [String] :request_from_date Retrieve entities from their creation date
  # @option opts [String] :request_to_date Retrieve entities to their creation date
  # @option opts [String] :store_url A web address of a store
  # @option opts [String] :store_key Find store by store key
  # @return [InlineResponse20026]
  describe 'account_cart_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_config_update
  # 
  # Update configs in the API2Cart database.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :new_store_key Update store key
  # @option opts [String] :bridge_url This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)
  # @option opts [String] :store_root Absolute path to the store root directory (used with \&quot;bridge_url\&quot; parameter)
  # @option opts [String] :db_tables_prefix This parameter is deprecated for this method. Please, use this parameter in method account.config.update
  # @option opts [String] :_3dcartapi_api_key 3DCart API Key
  # @option opts [String] :amazon_access_token Access token authorizing the app to access resources on behalf of a user
  # @option opts [String] :amazon_seller_id Seller Id
  # @option opts [String] :amazon_marketplaces_ids Comma separated marketplaces ids
  # @option opts [String] :amazon_secret_key Amazon Secret Key
  # @option opts [String] :amazon_access_key_id Amazon Secret Key Id
  # @option opts [String] :aspdotnetstorefront_api_user It&#39;s a AspDotNetStorefront account for which API is available
  # @option opts [String] :aspdotnetstorefront_api_pass AspDotNetStorefront API Password
  # @option opts [String] :bigcommerceapi_admin_account It&#39;s a BigCommerce account for which API is enabled
  # @option opts [String] :bigcommerceapi_api_path BigCommerce API URL
  # @option opts [String] :bigcommerceapi_api_key Bigcommerce API Key
  # @option opts [String] :bigcommerceapi_client_id Client ID of the requesting app
  # @option opts [String] :bigcommerceapi_access_token Access token authorizing the app to access resources on behalf of a user
  # @option opts [String] :bigcommerceapi_context API Path section unique to the store
  # @option opts [String] :demandware_client_id Demandware client id
  # @option opts [String] :demandware_api_password Demandware api password
  # @option opts [String] :demandware_user_name Demandware user name
  # @option opts [String] :demandware_user_password Demandware user password
  # @option opts [String] :demandware_env_type Demandware environment
  # @option opts [String] :ebay_client_id Application ID (AppID).
  # @option opts [String] :ebay_client_secret Shared Secret from eBay application
  # @option opts [String] :ebay_runame The RuName value that eBay assigns to your application.
  # @option opts [String] :ebay_access_token Used to authenticate API requests.
  # @option opts [String] :ebay_refresh_token Used to renew the access token.
  # @option opts [String] :ebay_environment eBay environment
  # @option opts [Integer] :ebay_site_id eBay global ID
  # @option opts [String] :ecwid_acess_token Access token authorizing the app to access resources on behalf of a user
  # @option opts [String] :ecwid_store_id Store Id
  # @option opts [String] :etsy_keystring Etsy keystring
  # @option opts [String] :etsy_shared_secret Etsy shared secret
  # @option opts [String] :etsy_access_token Access token authorizing the app to access resources on behalf of a user
  # @option opts [String] :etsy_token_secret Secret token authorizing the app to access resources on behalf of a user
  # @option opts [String] :neto_api_key Neto API Key
  # @option opts [String] :neto_api_username Neto User Name
  # @option opts [String] :shopify_api_key Shopify API Key
  # @option opts [String] :shopify_api_password Shopify API Password
  # @option opts [String] :shopify_shared_secret Shared secret
  # @option opts [String] :shopify_access_token Access token authorizing the app to access resources on behalf of a user
  # @option opts [String] :volusion_login It&#39;s a Volusion account for which API is enabled
  # @option opts [String] :volusion_password Volusion API Password
  # @option opts [String] :walmart_client_id Walmart client ID
  # @option opts [String] :walmart_client_secret Walmart client secret
  # @option opts [String] :squarespace_api_key Squarespace API Key
  # @return [InlineResponse20027]
  describe 'account_config_update test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_failed_webhooks
  # 
  # List webhooks that was not delivered to the callback.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count This parameter sets the entity amount that has to be retrieved. Max allowed count&#x3D;250
  # @option opts [Integer] :start This parameter sets the number from which you want to get entities
  # @option opts [String] :ids List of сomma-separated webhook ids
  # @return [InlineResponse20028]
  describe 'account_failed_webhooks test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_supported_platforms
  # 
  # Get list of supported platforms
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20029]
  describe 'account_supported_platforms test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
